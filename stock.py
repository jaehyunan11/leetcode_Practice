# import copy


# class Solution:
#     def findNum(self, numbers, target, partial=[]):
#         s = sum(partial)

#         if s == target:
#             print(f"sum(%s)=%s" % (partial, target))
#         if s >= target:
#             return
#         for i in range(len(numbers)):
#             n = numbers[i]
#             remaining = numbers[i+1:]
#             Solution.findNum(remaining, target, partial + [n])


# if __name__ == "__main__":
#     S = Solution()
#     stocks = [0.262814, 0.239288, 0.238623,
#               0.210806, 0.160968, 0.120926,
#               0.115543, 0.115506, 0.11458,
#               0.108064, 0.094173, 0.056538,
#               0.048812, 0.047204, 0.045588,
#               0.024729, 0.017479, 0.005963,
#               0.003982, 0.001429, 0.000241,
#               0.000155, 0.000083]
#     target = 0.000238
#     print(S.findNum(stocks, target))

from itertools import combinations
# set the number of closest combinations to show, the targeted number and the list
show = 1
target = 12
# lis = [3, 4, 5, 6, 6]
lis = [0.343033, 0.409606, 0.391298,
       0.11458, 0.115543, 0.160968,
       0.421341, 0.017479,
       1.41, 0.210806, 0.094173,
       0.353544, 0.707088,
       0.115506, 0.047204, 0.000083,
       0.59326, 0.594901,
       0.357351, 0.000155, 0.005963,
       0.357651, 0.238623, 0.596797,
       0.62336, 0.59741, 0.239288,
       0.479867, 0.120926, 0.003982,
       0.056538, 0.609013, 0.048812,
       0.001429, 0.4789, 0.262814,
       0.108064, 0.024729, 0.291863,
       0.045588, 0.000241, 0.636565, ]

diffs = []
for n in range(1, len(lis)+1):
    numbers = combinations(lis, n)
    # list the combinations and their absolute difference to target
    for combi in numbers:
        diffs.append([combi, abs(target - sum(combi))])

diffs.sort(key=lambda x: x[1])

for item in diffs[:show]:
    print(item[0], round(item[1], 10))


# lis = [0.343033, 0.409606, 0.391298,
#        0.11458, 1, 1,
#        1, 1, 1,
#        1, 0.115543, 0.160968,
#        0.421341, 1, 0.017479,
#        1.41, 0.210806, 0.094173,
#        1, 0.353544, 0.707088,
#        0.115506, 0.047204, 0.000083,
#        0.59326, 0.594901, 1,
#        0.357351, 0.000155, 0.005963,
#        0.357651, 0.238623, 0.596797,
#        0.62336, 0.59741, 0.239288,
#        0.479867, 0.120926, 0.003982,
#        0.056538, 0.609013, 0.048812,
#        0.001429, 0.4789, 0.262814,
#        0.108064, 0.024729, 0.291863,
#        0.045588, 0.000241, 0.636565,
#        3, 1]


# less than 0.286342
# lis = [0.262814, 0.239288, 0.238623,
#        0.210806, 0.160968, 0.120926,
#        0.115543, 0.115506, 0.11458,
#        0.108064, 0.094173, 0.056538,
#        0.048812, 0.047204, 0.045588,
#        0.024729, 0.017479, 0.005963,
#        0.003982, 0.001429, 0.000241,
#        0.000155, 0.000083]
# wholelist = [0.002311, 0.103278, 0.272054,
#              0.272054, 1, 0.374807,
#              0.223395, 0.401798, 1,
#              0.59704, 0.106475, 0.294174,
#              2.053328, 1.946672, 0.002311,
#              0.4841, 0.000316, 0.241516,
#              0.242297, 0.000218, 0.029242,
#              0.002311, 0.210319, 0.78737,
#              1.740788, 0.261523, 0.997689,
#              1, 1, 1,
#              1, 0.002311, 2.534786,
#              0.995378, 0.469836, 1,
#              5, 3, 1,
#              0.816901, 3, 3,
#              0.279856, 0.99993, 1,
#              1, 1, 3,
#              1, 1, 2,
#              1, 1, 2,
#              1, 1, 2,
#              2, 1, 2,
#              1, 0.153938, 0.154495,
#              0.154661, 0.154329, 0.154624,
#              0.080517, 0.080471, 0.048475,
#              0.2, 5, 1,
#              1, 2, 1,
#              1, 1, 3,
#              2, 2, 4,
#              1, 0.391298, 0.409606,
#              1, 1, 1,
#              1, 1, 1,
#              0.160968, 0.421341, 1,
#              0.000083, 0.59741, 0.239288,
#              0.056538, 0.003982, 0.024729,
#              1.41, 1, 0.210806, 0.005963,
#              0.094173, 1, 0.353544,
#              0.707088, 0.047204, 0.59326,
#              0.479867, 0.343033, 0.11458,
#              0.115543, 0.120926, 0.048812,
#              0.000241, 0.636565, 0.045588,
#              0.017479, 0.594901, 0.357351,
#              0.000155, 0.357651, 0.238623,
#              0.596797, 0.62336, 0.115506,
#              0.609013, 0.001429, 0.4789,
#              0.262814, 0.108064, 0.291863]
